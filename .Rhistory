lm_LOS3
lm_LOS2
lm_LOS3
lm(LengthOfStay ~ AveDailyCensus + log(NumberBeds) + Region + poly(InfectionRisk,2), data = senic)
lm_LOS3
lm_LOS2
lm_LOS3
senic$Region <- as.factor(senic$Region)
lm_LOS = lm(LengthOfStay ~ InfectionRisk + Age + log(NumberBeds) + Region, data = senic)
plot(senic$InfectionRisk, lm_LOS$residuals, main = "Residuals vs Infection Risk", xlab = "InfectionRisk", ylab = "Residuals", pch=16)
abline(h = 0, col = "red")
plot(senic$Age, lm_LOS$residuals, main = "Residuals vs Age", xlab = "Age", ylab = "Residuals", pch=16)
senic$Region <- as.factor(senic$Region)
senic$Region <- as.factor(senic$Region)
lm_LOS = lm(LengthOfStay ~ InfectionRisk + Age + log(NumberBeds) + Region, data = senic)
#Residuals vs Predictors
plot(senic$InfectionRisk, lm_LOS$residuals, main = "Residuals vs Infection Risk", xlab = "InfectionRisk", ylab = "Residuals", pch=16)
abline(h = 0, col = "red")
plot(senic$Age, lm_LOS$residuals, main = "Residuals vs Age", xlab = "Age", ylab = "Residuals", pch=16)
abline(h = 0, col = "red")
plot(log(senic$NumberBeds), lm_LOS$residuals, main = "Residuals vs Log Number Beds", xlab = "Log Number Beds", ylab = "Residuals", pch=16)
abline(h = 0, col = "red")
boxplot(lm_LOS$residuals ~ senic$Region, main = "Boxplots of Residuals by Region", xlab = 'Region', ylab = 'Residuals')
#Distribution of Residuals
hist(lm_LOS$residuals, freq=FALSE, xlab="Residual", main="")
curve(dnorm(x,mean=0,sd=sd(lm_LOS$residuals)),add=TRUE,col="blue")
#QQnorm
qqnorm(lm_LOS$residuals, pch = 16)
qqline(lm_LOS$residuals)
lm_LOS2 = lm(LengthOfStay ~ InfectionRisk + AveDailyCensus + log(NumberBeds) + Region, data = senic)
lm_LOS3 = lm(LengthOfStay ~ InfectionRisk + AveDailyCensus + log(NumberBeds) + Region + poly(InfectionRisk,2), data = senic)
lm_LOS2
lm_LOS3
lm_LOS3 = lm(LengthOfStay ~  AveDailyCensus + log(NumberBeds) + Region + poly(InfectionRisk,2), data = senic)
lm_LOS2
lm_LOS3
InfectionRisk +
InfectionRisk +
lm_LOS3 = lm(LengthOfStay ~ InfectionRisk + AveDailyCensus + log(NumberBeds) + Region + poly(InfectionRisk,2), data = senic)
lm_LOS3 = lm(LengthOfStay ~ InfectionRisk + AveDailyCensus + log(NumberBeds) + Region + poly(InfectionRisk,2), data = senic)
lm_LOS2
lm_LOS3
lm_LOS2
lm_LOS3
plot(lm_LOS$fitted.values, lm_LOS$residuals, main = "Residuals vs Infection Risk", xlab = "InfectionRisk", ylab = "Residuals", pch=16)
plot(lm_LOS$fitted.values, lm_LOS$residuals, main = "Residuals vs Infection Risk", xlab = "InfectionRisk", ylab = "Residuals", pch=16)
abline(h = 0, col = "red")
plot(lm_LOS$fitted.values, lm_LOS$residuals, main = 'Residuals vs Fitted Values', xlab = 'Fitted Values', ylab = 'Residuals', pch = 16)
abline(h = 0, col = "red")
plot(senic$InfectionRisk, lm_LOS$residuals, main = "Residuals vs Infection Risk", xlab = "InfectionRisk", ylab = "Residuals", pch=16)
abline(h = 0, col = "red")
plot(senic$Age, lm_LOS$residuals, main = "Residuals vs Age", xlab = "Age", ylab = "Residuals", pch=16)
abline(h = 0, col = "red")
plot(log(senic$NumberBeds), lm_LOS$residuals, main = "Residuals vs Log Number Beds", xlab = "Log Number Beds", ylab = "Residuals", pch=16)
abline(h = 0, col = "red")
boxplot(lm_LOS$residuals ~ senic$Region, main = "Boxplots of Residuals by Region", xlab = 'Region', ylab = 'Residuals')
#Residuals vs Fitted Values
plot(lm_LOS$fitted.values, lm_LOS$residuals, main = 'Residuals vs Fitted Values', xlab = 'Fitted Values', ylab = 'Residuals', pch = 16)
abline(h = 0, col = "red")
lm_LOS2 = lm(LengthOfStay ~ InfectionRisk + AveDailyCensus + log(NumberBeds) + Region, data = senic)
lm_LOS3 = lm(LengthOfStay ~ InfectionRisk + AveDailyCensus + log(NumberBeds) + Region + poly(InfectionRisk,2), data = senic)
poly(InfectionRisk,2)
poly(senic$InfectionRisk,2)
lm_LOS3 = lm(LengthOfStay ~ InfectionRisk + AveDailyCensus + log(NumberBeds) + Region + InfectionRisk^2, data = senic)
lm(LengthOfStay ~ InfectionRisk + AveDailyCensus + log(NumberBeds) + Region + InfectionRisk^2, data = senic)
lm(LengthOfStay ~ AveDailyCensus + log(NumberBeds) + Region + poly(InfectionRisk,2), data = senic)
lm(LengthOfStay ~ InfectionRisk + AveDailyCensus + log(NumberBeds) + Region + InfectionRisk^2, data = senic)
lm(LengthOfStay ~ AveDailyCensus + log(NumberBeds) + Region + poly(InfectionRisk,2), data = senic)
lm(LengthOfStay ~ InfectionRisk + AveDailyCensus + log(NumberBeds) + Region + exp(InfectionRisk,2), data = senic)
lm(LengthOfStay ~ InfectionRisk + AveDailyCensus + log(NumberBeds) + Region + InfectionRisk^2, data = senic)
infec = senic$InfectionRisk ^ 2
lm(LengthOfStay ~ InfectionRisk + AveDailyCensus + log(NumberBeds) + Region + infec, data = senic)
lm(LengthOfStay ~ AveDailyCensus + log(NumberBeds) + Region + poly(InfectionRisk,2), data = senic)
lm(LengthOfStay ~ InfectionRisk + AveDailyCensus + log(NumberBeds) + Region + infec, data = senic)
lm(LengthOfStay ~ AveDailyCensus + log(NumberBeds) + Region + poly(InfectionRisk,2), data = senic)
poly(x, 2)
x = 3
poly(x, 2)
x = 3
poly(x, 2)
lm_LOS2 = lm(LengthOfStay ~ InfectionRisk + AveDailyCensus + log(NumberBeds) + Region, data = senic)
lm_LOS3 = lm(LengthOfStay ~ AveDailyCensus + log(NumberBeds) + Region + poly(InfectionRisk,2), data = senic)
lm_LOS2
lm_LOS3
data <- read.table("senic.txt", header = TRUE, sep = "", strip.white = TRUE)
write.csv(data, "senic.csv", row.names = FALSE)
senic = read.csv('senic.csv')
head(senic)
lin_LOS = lm(LengthOfStay ~ InfectionRisk + AveDailyCensus + log(NumberBeds) + Region, data = senic)
quad_LOS3 = lm(LengthOfStay ~ poly(InfectionRisk,2) + AveDailyCensus + log(NumberBeds) + Region, data = senic)
lin_LOS2
lin_LOS = lm(LengthOfStay ~ InfectionRisk + AveDailyCensus + log(NumberBeds) + Region, data = senic)
quad_LOS3 = lm(LengthOfStay ~ poly(InfectionRisk,2) + AveDailyCensus + log(NumberBeds) + Region, data = senic)
quad_LOS = lm(LengthOfStay ~ poly(InfectionRisk,2) + AveDailyCensus + log(NumberBeds) + Region, data = senic)
lin_LOS
quad_LOS
lin_LOS = lm(LengthOfStay ~ InfectionRisk + AveDailyCensus + log(NumberBeds) + Region, data = senic)
quad_LOS = lm(LengthOfStay ~ poly(InfectionRisk,2) + AveDailyCensus + log(NumberBeds) + Region, data = senic)
lin_LOS
quad_LOS
senic$Region <- as.factor(senic$Region)
lm_LOS = lm(LengthOfStay ~ InfectionRisk + Age + log(NumberBeds) + Region, data = senic)
senic$Region <- as.factor(senic$Region)
lm_LOS = lm(LengthOfStay ~ InfectionRisk + Age + log(NumberBeds) + Region, data = senic)
#Residuals vs Predictors
plot(senic$InfectionRisk, lm_LOS$residuals, main = "Residuals vs Infection Risk", xlab = "InfectionRisk", ylab = "Residuals", pch=16)
abline(h = 0, col = "red")
plot(senic$Age, lm_LOS$residuals, main = "Residuals vs Age", xlab = "Age", ylab = "Residuals", pch=16)
abline(h = 0, col = "red")
plot(log(senic$NumberBeds), lm_LOS$residuals, main = "Residuals vs Log Number Beds", xlab = "Log Number Beds", ylab = "Residuals", pch=16)
abline(h = 0, col = "red")
boxplot(lm_LOS$residuals ~ senic$Region, main = "Boxplots of Residuals by Region", xlab = 'Region', ylab = 'Residuals')
#Residuals vs Fitted Values
plot(lm_LOS$fitted.values, lm_LOS$residuals, main = 'Residuals vs Fitted Values', xlab = 'Fitted Values', ylab = 'Residuals', pch = 16)
abline(h = 0, col = "red")
#Distribution of Residuals
hist(lm_LOS$residuals, freq=FALSE, xlab="Residual", main="")
curve(dnorm(x,mean=0,sd=sd(lm_LOS$residuals)),add=TRUE,col="blue")
#QQnorm
qqnorm(lm_LOS$residuals, pch = 16)
qqline(lm_LOS$residuals)
lin_LOS = lm(LengthOfStay ~ InfectionRisk + AveDailyCensus + log(NumberBeds) + Region, data = senic)
quad_LOS = lm(LengthOfStay ~ poly(InfectionRisk,2) + AveDailyCensus + log(NumberBeds) + Region, data = senic)
lin_LOS
quad_LOS
senic
table(senic$Region)
mean(senic$AveDailyCensus)
mean(log(senic$NumberBeds))
# Most common region is 3
table(senic$Region)
newdata <- data.frame(
InfectionRisk = senic$InfectionRisk,
AveDailyCensus = mean(senic$AveDailyCensus),
NumberBeds = exp(mean(log(senic$NumberBeds))),  # back-transform for prediction
Region = 3
)
predict(model_linear, newdata)
predict(lin_LOS, newdata)
predict(lin_LOS, newdata)
newdata <- data.frame(
InfectionRisk = senic$InfectionRisk,
AveDailyCensus = mean(senic$AveDailyCensus),
NumberBeds = exp(mean(log(senic$NumberBeds))),  # back-transform for prediction
Region3 = 1
)
predict(lin_LOS, newdata)
?predict
model_linear <- lm(LengthOfStay ~ InfectionRisk + AveDailyCensus + log(NumberBeds) + Region, data = senic)
model_poly <- lm(LengthOfStay ~ poly(InfectionRisk, 2) + AveDailyCensus + log(NumberBeds) + Region, data = senic)
# 1. Get the most common region
most_common_region <- names(sort(table(senic$Region), decreasing = TRUE))[1]
# 2. Get mean values for other covariates
mean_census <- mean(senic$AveDailyCensus, na.rm = TRUE)
mean_logbeds <- mean(log(senic$NumberBeds), na.rm = TRUE)
# 3. Create a grid of InfectionRisk values
infection_seq <- seq(min(senic$InfectionRisk), max(senic$InfectionRisk), length.out = 100)
# 4. Create new data frame for prediction
newdata <- data.frame(
InfectionRisk = infection_seq,
AveDailyCensus = mean_census,
NumberBeds = exp(mean_logbeds),  # back-transform for prediction
Region = factor(most_common_region, levels = levels(senic$Region))
)
newdata$logNumberBeds <- log(newdata$NumberBeds)
# 5. Predict from both models
newdata$LOS_linear <- predict(model_linear, newdata)
newdata$LOS_poly <- predict(model_poly, newdata)
# 6. Plot
library(ggplot2)
ggplot(newdata, aes(x = InfectionRisk)) +
geom_line(aes(y = LOS_linear, color = "Linear Model"), size = 1.2) +
geom_line(aes(y = LOS_poly, color = "Quadratic Model"), size = 1.2, linetype = "dashed") +
labs(
title = "Estimated LOS vs InfectionRisk",
y = "Predicted Length of Stay",
color = "Model"
) +
theme_minimal()
most_common_region
infection_seq
infection_seq <- seq(min(senic$InfectionRisk), max(senic$InfectionRisk), length.out = 1000)
exp(mean(log(senic$NumberBeds)))
mean(exp(log(senic$NumberBeds)))
exp(mean(log(senic$NumberBeds)))
mean(exp(log(senic$NumberBeds)))
#5.266368
mean(senic$NumberBeds)
# 4. Create new data frame for prediction
newdata <- data.frame(
InfectionRisk = infection_risk,
AveDailyCensus = mean(senic$AveDailyCensus),
NumberBeds = mean(senic$NumberBeds),
Region = factor("3", levels = levels(senic$Region))
)
infection_risk <- seq(min(senic$InfectionRisk), max(senic$InfectionRisk), length.out = 1000)
# 4. Create new data frame for prediction
newdata <- data.frame(
InfectionRisk = infection_risk,
AveDailyCensus = mean(senic$AveDailyCensus),
NumberBeds = mean(senic$NumberBeds),
Region = factor("3", levels = levels(senic$Region))
)
# 5. Predict from both models
newdata$LOS_linear <- predict(model_linear, newdata)
newdata$LOS_poly <- predict(model_poly, newdata)
# 6. Plot
library(ggplot2)
ggplot(newdata, aes(x = InfectionRisk)) +
geom_line(aes(y = LOS_linear, color = "Linear Model"), size = 1.2) +
geom_line(aes(y = LOS_poly, color = "Quadratic Model"), size = 1.2, linetype = "dashed") +
labs(
title = "Estimated LOS vs InfectionRisk",
y = "Predicted Length of Stay",
color = "Model"
) +
theme_minimal()
newdata$lin_LOS <- predict(model_linear, newdata)
newdata$quad_LOS <- predict(model_poly, newdata)
# 4. Create new data frame for prediction
newdata <- data.frame(
InfectionRisk = infection_risk,
AveDailyCensus = mean(senic$AveDailyCensus),
NumberBeds = mean(senic$NumberBeds),
Region = factor("3", levels = levels(senic$Region))
)
newdata
plot(infection_risk, predict(model_linear, newdata))
ggplot(newdata, aes(x = InfectionRisk)) +
geom_line(aes(y = LOS_linear, color = "Linear Model"), size = 1.2) +
geom_line(aes(y = LOS_poly, color = "Quadratic Model"), size = 1.2, linetype = "dashed") +
labs(
title = "Estimated LOS vs InfectionRisk",
y = "Predicted Length of Stay",
color = "Model"
) +
theme_minimal()
newdata$LOS_linear <- predict(model_linear, newdata)
newdata$LOS_poly <- predict(model_poly, newdata)
newdata$LOS_linear <- predict(lin_LOS, newdata)
newdata$LOS_quad <- predict(quad_LOS, newdata)
ggplot(newdata, aes(x = InfectionRisk)) +
geom_line(aes(y = LOS_linear, color = "Linear Model"), size = 1.2) +
geom_line(aes(y = LOS_poly, color = "Quadratic Model"), size = 1.2, linetype = "dashed") +
labs(
title = "Estimated LOS vs InfectionRisk",
y = "Predicted Length of Stay",
color = "Model"
) +
theme_minimal()
ggplot(newdata) + aes(x = InfectionRisk) +
geom_line(aes(y = LOS_linear, color = "Linear Model"), size = 1.2) +
geom_line(aes(y = LOS_poly, color = "Quadratic Model"), size = 1.2, linetype = "dashed") +
labs(
title = "Estimated LOS vs InfectionRisk",
y = "Predicted Length of Stay",
color = "Model"
) +
theme_minimal()
ggplot(newdata) + aes(x = InfectionRisk) +
geom_line(aes(y = LOS_linear, color = "Linear")) +
geom_line(aes(y = LOS_poly, color = "Quadratic")) +
labs(
title = "LOS vs InfectionRisk",
y = "Predicted Length of Stay"
)
ggplot(newdata) + aes(x = InfectionRisk) +
geom_line(aes(y = LOS_linear, color = "Linear")) +
geom_line(aes(y = LOS_poly, color = "Quadratic")) +
labs(
title = "LOS vs InfectionRisk",
y = "Predicted Length of Stay"
) +
theme(legend.position = "none")
ggplot(newdata) + aes(x = InfectionRisk) +
geom_line(aes(y = LOS_linear, color = "Linear")) +
geom_line(aes(y = LOS_poly, color = "Quadratic")) +
labs(
title = "LOS vs InfectionRisk",
y = "LOS"
) +
theme(legend.position = "none")
ggplot(newdata) + aes(x = InfectionRisk) +
geom_line(aes(y = predict(lin_LOS, newdata), color = "red")) +
geom_line(aes(y = predict(quad_LOS, newdata), color = "blue")) +
labs(
title = "LOS vs InfectionRisk",
y = "LOS"
) +
theme(legend.position = "none")
ggplot(newdata) + aes(x = InfectionRisk) +
geom_line(aes(y = predict(lin_LOS, newdata), color = "red")) +
geom_line(aes(y = predict(quad_LOS, newdata), color = "blue")) +
labs(
title = "LOS vs InfectionRisk",
y = "LOS"
) +
theme(legend.position = "none")
ggplot(newdata) + aes(x = InfectionRisk) +
geom_line(aes(y = predict(lin_LOS, newdata))) +
geom_line(aes(y = predict(quad_LOS, newdata))) +
labs(
title = "LOS vs InfectionRisk",
y = "LOS"
) +
theme(legend.position = "none")
ggplot(newdata) + aes(x = InfectionRisk) +
geom_line(aes(y = predict(lin_LOS, newdata), color = 'red')) +
geom_line(aes(y = predict(quad_LOS, newdata))) +
labs(
title = "LOS vs InfectionRisk",
y = "LOS"
) +
theme(legend.position = "none")
ggplot(newdata) + aes(x = InfectionRisk) +
geom_line(aes(y = predict(lin_LOS, newdata), color = 'red')) +
geom_line(aes(y = predict(quad_LOS, newdata), color = 'darkgreen')) +
labs(
title = "LOS vs InfectionRisk",
y = "LOS"
) +
theme(legend.position = "none")
ggplot(newdata) + aes(x = InfectionRisk) +
geom_line(aes(y = predict(lin_LOS, newdata), color = 'red')) +
geom_line(aes(y = predict(quad_LOS, newdata), color = 'blue')) +
labs(
title = "LOS vs InfectionRisk",
y = "LOS"
) +
theme(legend.position = "none")
ggplot(newdata, aes(x = InfectionRisk)) +
geom_line(aes(y = predict(lin_LOS, newdata)), color = 'red') +
geom_line(aes(y = predict(quad_LOS, newdata)), color = 'blue') +
labs(
title = "LOS vs InfectionRisk",
y = "LOS"
) +
theme(legend.position = "none")
input <- data.frame(
InfectionRisk = infection_risk,
AveDailyCensus = mean(senic$AveDailyCensus),
NumberBeds = mean(senic$NumberBeds),
Region = factor("3", levels = levels(senic$Region))
)
ggplot(input, aes(x = InfectionRisk)) +
geom_line(aes(y = predict(lin_LOS, newdata)), color = 'red') +
geom_line(aes(y = predict(quad_LOS, newdata)), color = 'blue') +
labs(
title = "LOS vs InfectionRisk",
y = "LOS"
) +
theme(legend.position = "none")
plot(lin_LOS$fitted.values, lin_LOS$residuals, main = 'Residuals vs Fitted Values', xlab = 'Fitted Values', ylab = 'Residuals', pch = 16)
abline(h = 0, col = "red")
plot(quad_LOS$fitted.values, quad_LOS$residuals, main = 'Residuals vs Fitted Values', xlab = 'Fitted Values', ylab = 'Residuals', pch = 16)
abline(h = 0, col = "red")
plot(lin_LOS)
plot(lin_LOS, which = 1:2)
plot(lin_LOS, which = 1:2, pch = 16)
plot(lin_LOS$fitted.values, lin_LOS$residuals, main = 'Residuals vs Fitted Values', xlab = 'Fitted Values', ylab = 'Residuals', pch = 16)
abline(h = 0, col = "red")
plot(quad_LOS$fitted.values, quad_LOS$residuals, main = 'Residuals vs Fitted Values', xlab = 'Fitted Values', ylab = 'Residuals', pch = 16)
abline(h = 0, col = "red")
plot(lin_LOS, which = 1:2, pch = 16)
plot(quad_LOS, which = 1:2, pch = 16)
plot(lin_LOS, which = 1:2, pch = 16)
plot(quad_LOS, which = 1:2, pch = 16)
summary(lin_LOS)$adj.r.squared
summary(quad_LOS)$adj.r.squared
summary(lin_LOS)$adj.r.squared
summary(quad_LOS)$adj.r.squared
summary(lin_LOS)
summary(lin_LOS)
summary(quad_LOS)
plot(lin_LOS, which = 1:2, pch = 16)
plot(quad_LOS, which = 1:2, pch = 16)
sepic
senic
senic$school = factor(senic$MedSchool)
senic$school = factor(senic$MedSchool)
model_interaction = lm(LengthOfStay ~ InfectionRisk * school + Age + logNumberofBeds + Region, data = senic)
interaction = lm(LengthOfStay ~ InfectionRisk * school + Age + logNumberofBeds + Region, data = senic)
no_interaction = lm(LengthOfStay ~ InfectionRisk + school + Age + log(NumberBeds) + Region, data = senic)
interaction = lm(LengthOfStay ~ InfectionRisk * school + Age + log(NumberBeds) + Region, data = senic)
no_interaction = lm(LengthOfStay ~ InfectionRisk + school + Age + log(NumberBeds) + Region, data = senic)
senic
lm(LengthOfStay ~ InfectionRisk + school + Age + log(NumberBeds) + Region, data = senic)
anova(interaction, no_interaction)
confint(interaction)
interaction
confint(interaction)
anova(interaction, no_interaction)
anova(no_interaction, interaction)
anova(no_interaction, interaction)
library(MASS)
library(MASS)
help(birthwt)
birthwt
birthwt$race = as.factor(birthwt$race)
birthwt$ptl = as.factor(birthwt$ptl)
birthwt$ftv = as.factor(birthwt$ftv)
birthwt
?birthwt
birthwt
pairs(bwt ~ age + lwt + race + smoke + ptl + ht + ui + ftv)
pairs(bwt ~ age + lwt + race + smoke + ptl + ht + ui + ftv, data = birthwt)
pairs(bwt ~ age + lwt + race + smoke + ptl + ht + ui + ftv, data = birthwt, pch=16, cex=0.5,col=2))
pairs(bwt ~ age + lwt + race + smoke + ptl + ht + ui + ftv, data = birthwt, pch=16, cex=0.5,col=2)
lm_bwt = lm(bwt ~ age + lwt + race + smoke + ptl + ht + ui + ftv, data = birthwt)
summarize(lm_bwt)
summarise(lm_bwt)
summary(lm_bwt)
lm_bwt
summary(lm_bwt)
lm_bwt
birthwt
plot(birthwt$InfectionRisk, birthwt$residuals, main = "Residuals vs Mother's Age", xlab = "Age", ylab = "Residuals", pch=16)
plot(birthwt$InfectionRisk, birthwt$residuals, main = "Residuals vs Mother's Age", xlab = "Age", ylab = "Residuals", pch=16)
plot(birthwt$InfectionRisk, lm_bwt$residuals, main = "Residuals vs Mother's Age", xlab = "Age", ylab = "Residuals", pch=16)
plot(birthwt$age, lm_bwt$residuals, main = "Residuals vs Mother's Age", xlab = "Age", ylab = "Residuals", pch=16)
plot(birthwt$age, lm_bwt$residuals, main = "Residuals vs Mother's Age", xlab = "Age", ylab = "Residuals", pch=16)
abline(h = 0, col = "red")
birthwt
plot(birthwt$race, lm_bwt$residuals, main = "Residuals vs Race", xlab = "Race", ylab = "Residuals", pch=16)
abline(h = 0, col = "red")
birthwt
plot(birthwt$ptl, lm_bwt$residuals, main = "Residuals vs Number of Previous Premature Labors", xlab = "Num Premature Labors", ylab = "Residuals", pch=16)
abline(h = 0, col = "red")
birthwt
plot(birthwt$age, lm_bwt$residuals, main = "Residuals vs Mother's Age", xlab = "Age", ylab = "Residuals", pch=16)
abline(h = 0, col = "red")
plot(birthwt$lwt, lm_bwt$residuals, main = "Residuals vs Mother's Weight", xlab = "Weight", ylab = "Residuals", pch=16)
abline(h = 0, col = "red")
plot(birthwt$race, lm_bwt$residuals, main = "Residuals vs Race", xlab = "Race", ylab = "Residuals", pch=16)
abline(h = 0, col = "red")
plot(birthwt$smoke, lm_bwt$residuals, main = "Residuals vs Smoking Status", xlab = "Smoke", ylab = "Residuals", pch=16)
abline(h = 0, col = "red")
plot(birthwt$ptl, lm_bwt$residuals, main = "Residuals vs Number of Previous Premature Labors", xlab = "Num Premature Labors", ylab = "Residuals", pch=16)
abline(h = 0, col = "red")
plot(birthwt$ht, lm_bwt$residuals, main = "Residuals vs History of Hypertension", xlab = "Hypertension", ylab = "Residuals", pch=16)
abline(h = 0, col = "red")
plot(birthwt$ui, lm_bwt$residuals, main = "Residuals vs Presence of Uterine Irritability", xlab = "Uterine Irritability", ylab = "Residuals", pch=16)
abline(h = 0, col = "red")
plot(birthwt$ftv, lm_bwt$residuals, main = "Residuals vs Number of Physician Visits during First Trimester", xlab = "Num Visits", ylab = "Residuals", pch=16)
abline(h = 0, col = "red")
Homer = read.table("Homer.txt",header=TRUE)
Homer
Homer
pairs(y ~ x1 + x2 + x3 + x4, data = Homer, pch=16, cex=0.5,col=2)
lm_homer = lm(y ~ x1 + x2 + x3 + x4, data = Homer)
summary(lm_homer)
plot(lm_homer$fitted.values, lm_homer$residuals, main = 'Residuals vs Fitted Values', xlab = 'Fitted Values', ylab = 'Residuals', pch = 16)
abline(h = 0, col = "red")
plot(lm_homer$fitted.values, lm_homer$residuals, main = 'Residuals vs Fitted Values', xlab = 'Fitted Values', ylab = 'Residuals', pch = 16, cex = 0.5)
abline(h = 0, col = "red")
plot(lm_homer$fitted.values, lm_homer$residuals, main = 'Residuals vs Fitted Values', xlab = 'Fitted Values', ylab = 'Residuals', pch = 16, cex = 0.3)
abline(h = 0, col = "red")
plot(lm_homer$fitted.values, lm_homer$residuals, main = 'Residuals vs Fitted Values', xlab = 'Fitted Values', ylab = 'Residuals', pch = 16, cex = 0.4)
abline(h = 0, col = "red")
update.packages(ask = FALSE)
update.packages(ask = FALSE)
setwd("/Users/juhimalwade/Documents/SDS 375/Homework3")
knitr::opts_chunk$set(echo = TRUE)
df = read.csv('homework3_data.csv")
df
df = read.csv('homework3_data.csv')
df
df = read.csv('homework3_data.csv')
df
df %>%
group_by('design') %>%
summarize('mean_nps' = mean(nps))
df %>%
group_by(design) %>%
summarize('mean_nps' = mean(nps))
library(dplyr)
df %>%
group_by(design) %>%
summarize('mean_nps' = mean(nps))
df %>%
group_by(design) %>%
summarize('mean_sales' = mean(sales))
df %>%
group_by(design) %>%
summarize('mean_items' = mean(items))
table(df)
table(df$design)
df %>%
group_by(design) %>%
summarize('mean_nps' = mean(nps))
df %>%
group_by(design) %>%
summarize('mean_sales' = mean(sales))
df %>%
group_by(design) %>%
summarize('mean_items' = mean(items))
library(ggplot2)
ggplot(df) + aes(x = sales) + geom_hist()
ggplot(df) + aes(x = sales) + geom_histogram()
ggplot(df) + aes(x = sales) + geom_histogram() + facet_wrap(~design)
ggplot(df) + aes(x = sales) + geom_histogram(fill = "steelblue") + facet_wrap(~design)
ggplot(df) + aes(x = sales) + geom_histogram(fill = "steelblue", color = 'black') + facet_wrap(~design)
ggplot(df) + aes(x = sales) + geom_histogram(fill = "steelblue", color = 'black') + facet_wrap(~design)
ggplot(df) + aes(x = nps) + geom_histogram(fill = "pink", color = 'black') + facet_wrap(~design)
ggplot(df) + aes(x = nps) + geom_col(fill = "pink", color = 'black') + facet_wrap(~design)
ggplot(df) + aes(x = nps) + geom_bar(fill = "pink", color = 'black') + facet_wrap(~design)
ggplot(df) + aes(x = items) + geom_histogram(fill = "steelblue", color = 'black') + facet_wrap(~design)
ggplot(df) + aes(x = items) + geom_bar(fill = "steelblue", color = 'black') + facet_wrap(~design)
ggplot(df) + aes(x = items) + geom_bar(fill = "green4", color = 'black') + facet_wrap(~design)
ggplot(df) + aes(x = items) + geom_bar(fill = "lightgreen", color = 'black') + facet_wrap(~design)
table(df$design)
ggplot(df) + aes(x = items) + geom_bar(fill = "lightgreen", color = 'black') + facet_wrap(~design)
